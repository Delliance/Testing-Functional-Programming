Predicate

The Java Predicate interface, java.util.function.Predicate, represents a simple function that takes a single value as
parameter, and returns true or false. Here is how the Predicate functional interface definition looks:

    public interface Predicate<T> {
        boolean test(T t);
    }

The Predicate interface contains more methods than the test() method, but the rest of the methods are default or static
methods which you don't have to implement.

You can implement the Predicate interface using a class, like this:

    public class CheckForNull implements Predicate {
        @Override
        public boolean test(Object o) {
            return o != null;
        }
    }

You can also implement the Java Predicate interface using a Lambda expression. Here is an example of implementing the
Predicate interface using a Java lambda expression:

    Predicate predicate = (value) -> value != null;

This lambda implementation of the Predicate interface effectively does the same as the implementation above that uses a
class.